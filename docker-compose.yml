services:
  # Dockerización para el frontend.
  frontend:
    build:
      context: ./frontend/ucu-web
      dockerfile: ../Dockerfile
    container_name: ucu_snow_sports_frontend
    ports:
      - "5173:5173"
    depends_on:
      - app
    volumes:
      - ./frontend/ucu-web:/app
      - node_modules_volume:/app/node_modules
    networks:
      - ucu_network

  # Dockerización para la app de backend.
  app:
    # Construye el contenedor utilizando el Dockerfile en el directorio local. El contexto del build es el directorio local "./backend/src".
    build:
      context: ./backend/src
      dockerfile: ../Dockerfile # Un directorio atrás de "./src".
    # Nombre del contenedor.
    container_name: ucu_snow_sports_backend
    # puerto_host:puerto_container. Expone el puerto 5000 del contenedor en el puerto 3006 del host.
    ports:
      - "3006:5000"
    # No se va a iniciar el servicio de la app hasta que el servicio "db" (base de datos) esté levantado.
    depends_on:
      - db
    # Variables de entorno para configurar la conexión con la base de datos.
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root_password
      - DB_NAME=ucu_snow_sports
    # Volume para que los archivos del host se sincronicen con el contenedor.
    # Pasa todos los archivos del directorio local "./backend/src" al directorio "./src" dentro del contenedor.
    volumes:
      - ./backend/src:/src

    # El servicio de la app comparte la red "ucu_network" con el servicio de la base de datos.
    networks:
      - ucu_network

  # Dockerización para la base de datos MySQL.
  db:
    # Versión de MySQL que va a usar la base de datos.
    image: mysql:8.0
    # Nombre del contenedor.
    container_name: ucu_snow_sports_db
    # Variables de entorno para configurar la base de datos MySQL.
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: ucu_snow_sports
      # Este usuario se usará para luego configurarle permisos más restringidos que el usuario root.
      MYSQL_USER: ucu_user
      MYSQL_PASSWORD: ucu_password
    # Expone el puerto 3306 del contenedor (puerto estándar de MySQL) al puerto 3305 del host.
    ports:
      - "3305:3306"

    # Volume para persistir los datos de la base de datos.
    # "db_data" es un volumen manejado por Docker que es oculto.
    # En "/var/lib/mysql" dentro del contenedor, MySQL por defecto escribe archivos.
    # Los scripts MySQL dentro del directorio local "./scripts" se ejecutarán en orden alfabético en la base de datos la primera vez que se levante.
    volumes:
      - db_data:/var/lib/mysql
      - ./scripts:/docker-entrypoint-initdb.d

    # La base de datos también comparte la red "ucu_network".
    networks:
      - ucu_network

# Definición de los volumes. "db_data" será usado para almacenar los datos de la base de datos MySQL de forma persistente.
volumes:
  db_data:
  node_modules_volume:

# Definición de las redes. "ucu_network" es la red interna que conecta la app y la base de datos.
networks:
  ucu_network: